<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">
	<context:component-scan base-package="com.lockerz.service.user.controllers" />
	<context:component-scan base-package="com.lockerz.service.commons.controllers" />
	<mvc:annotation-driven />
	<bean id="properties" class="com.lockerz.service.user.utilities.PlaceholderConfigurer" />
	<bean id="exceptionFilter" class="com.lockerz.service.commons.filters.ExceptionFilter" />
	<bean id="authorizationFilter" class="com.lockerz.service.commons.filters.AuthorizationFilter" >
		<property name="authorizer">
        	<ref bean="keyAuthorizer"/>
    	</property>
	</bean>
	<bean id="keyAuthorizer" class="com.lockerz.service.authentication.auth.KeyAuthorizerImpl">
		<property name="apiKey">
        	<value>${authorizer.apiKey}</value>
    	</property>
	</bean>
	<bean id="tokenAuthenticator" class="com.lockerz.service.authentication.auth.TokenAuthenticatorImpl" />
	<bean id="authenticationFilter" class="com.lockerz.service.commons.filters.AuthenticationFilter" >
		<property name="authenticator">
        	<ref bean="tokenAuthenticator"/>
    	</property>
	</bean>
	
	<bean id="locatorDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
      	<property name="driverClass"><value>${locator.c3po.jdbc.driver}</value></property>
      	<property name="jdbcUrl"><value>${locator.c3po.jdbc.url}</value></property>
      	<property name="user"><value>${locator.c3po.jdbc.user}</value></property>
      	<property name="password"><value>${locator.c3po.jdbc.password}</value></property>
      	<property name="acquireIncrement"><value>${locator.c3po.jdbc.acquireIncrement}</value></property>
		<property name="initialPoolSize"><value>${locator.c3po.jdbc.initialPoolSize}</value></property>
		<property name="maxPoolSize"><value>${locator.c3po.jdbc.maxPoolSize}</value></property>
		<property name="minPoolSize"><value>${locator.c3po.jdbc.minPoolSize}</value></property>
		<property name="maxIdleTime"><value>${locator.c3po.jdbc.maxIdleTime}</value></property>
    </bean>
	<bean id="locatorSessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="hibernateProperties">
    		<props>
    			<prop key="hibernate.show_sql">${locator.hibernate.show_sql}</prop>
            	<prop key="hibernate.format_sql">${locator.hibernate.format_sql}</prop>
            	<prop key="hibernate.hbm2ddl.auto">${locator.hibernate.hbm2ddl.auto}</prop>
    			<prop key="hibernate.memcached.servers">${locator.hibernate.memcached.servers}</prop>
    			<prop key="hibernate.cache.use_query_cache">${locator.hibernate.cache.use_query_cache}</prop>
    			<prop key="hibernate.dialect">${locator.hibernate.dialect}</prop>
    			<prop key="hibernate.cache.use_second_level_cache">${locator.hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.provider_class">${locator.hibernate.cache.provider_class}</prop>
        		<prop key="hibernate.transaction.factory_class">${locator.hibernate.transaction.factory_class}</prop> 
				<prop key="hibernate.current_session_context_class">${locator.hibernate.current_session_context_class}</prop>
        	</props>
    	</property>
    	<property name="dataSource" ref="locatorDataSource"/>
    	<property name="mappingResources">
        	<list>
            	<value>user_lookup.hbm.xml</value>
        	</list>
    	</property>
	</bean>
	<bean id="locatorHibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    	<property name="sessionFactory">
        	<ref bean="locatorSessionFactory"/>
    	</property>
	</bean>
	
	<bean id="pod1DataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
      	<property name="driverClass"><value>${pod1.c3po.jdbc.driver}</value></property>
      	<property name="jdbcUrl"><value>${pod1.c3po.jdbc.url}</value></property>
      	<property name="user"><value>${pod1.c3po.jdbc.user}</value></property>
      	<property name="password"><value>${pod1.c3po.jdbc.password}</value></property>
      	<property name="acquireIncrement"><value>${pod1.c3po.jdbc.acquireIncrement}</value></property>
		<property name="initialPoolSize"><value>${pod1.c3po.jdbc.initialPoolSize}</value></property>
		<property name="maxPoolSize"><value>${pod1.c3po.jdbc.maxPoolSize}</value></property>
		<property name="minPoolSize"><value>${pod1.c3po.jdbc.minPoolSize}</value></property>
		<property name="maxIdleTime"><value>${pod1.c3po.jdbc.maxIdleTime}</value></property>
    </bean>
	<bean id="pod1SessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="hibernateProperties">
    		<props>
    			<prop key="hibernate.show_sql">${pod1.hibernate.show_sql}</prop>
            	<prop key="hibernate.format_sql">${pod1.hibernate.format_sql}</prop>
            	<prop key="hibernate.hbm2ddl.auto">${pod1.hibernate.hbm2ddl.auto}</prop>
    			<prop key="hibernate.memcached.servers">${pod1.hibernate.memcached.servers}</prop>
    			<prop key="hibernate.cache.use_query_cache">${pod1.hibernate.cache.use_query_cache}</prop>
    			<prop key="hibernate.dialect">${pod1.hibernate.dialect}</prop>
    			<prop key="hibernate.cache.use_second_level_cache">${pod1.hibernate.cache.use_second_level_cache}</prop>
				<prop key="hibernate.cache.provider_class">${pod1.hibernate.cache.provider_class}</prop>
        		<prop key="hibernate.transaction.factory_class">${pod1.hibernate.transaction.factory_class}</prop> 
				<prop key="hibernate.current_session_context_class">${pod1.hibernate.current_session_context_class}</prop>
        	</props>
    	</property>
    	<property name="dataSource" ref="pod1DataSource"/>
    	<property name="mappingResources">
        	<list>
            	<value>user.hbm.xml</value>
        	</list>
    	</property>
	</bean>
	<bean id="pod1HibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
    	<property name="sessionFactory">
        	<ref bean="pod1SessionFactory"/>
    	</property>
	</bean>
	<bean id="userService" class="com.lockerz.service.user.services.UserServiceImpl">
		<constructor-arg>
        	<list>
            	<ref bean="locatorHibernateTemplate"/>
            	<ref bean="pod1HibernateTemplate"/>
        	</list>
    	</constructor-arg>
	</bean>
</beans>